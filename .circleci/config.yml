# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10.16.3-buster

    environment:
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: update-yarn
          command: |
            curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
            echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
            sudo apt-get update && sudo apt-get -y install yarn

      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: "Run Tests"
          command: yarn test

      - run:
          name: "Build Extension"
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              echo "Setting up master env vars..."
              echo "GITHUB_CLIENT_ID="$GITHUB_PROD_CLIENT_ID >> .env
              echo "GITHUB_CLIENT_SECRET="$GITHUB_PROD_CLIENT_SECRET >> .env
            fi
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              echo "Setting up staging env vars..."
              echo "GITHUB_CLIENT_ID="$GITHUB_DEV_CLIENT_ID >> .env
              echo "GITHUB_CLIENT_SECRET="$GITHUB_DEV_CLIENT_SECRET >> .env
            fi
            cat .env
            yarn run build

      - run:
          name: "Package Extension"
          command: zip -r get-the-gist.zip build

      - run:
          name: "Upload & Publish Extension to the Google Chrome Store"
          command: |
            # If branch is master then publish the app to the Chrome Web Store
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              export APP_ID=efaekpejcfjpejdjhkolhlnpepimjcio
              export PUBLISH_TARGET=default
            fi
            # If branch is staging then publish the app for testers only
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              export APP_ID=dedacmldgkhekcocalpdeldpmejppjkc
              export PUBLISH_TARGET=trustedTesters
            fi
            node scripts/update.js
